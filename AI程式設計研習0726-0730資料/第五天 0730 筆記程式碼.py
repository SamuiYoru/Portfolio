# -*- coding: utf-8 -*-
"""Day5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LlfY-mG8zc-xN4Qu6XZIDwNDQNkbcmZ-

#**用matplot折線圖** 簡易畫出一條線
"""

import matplotlib.pyplot as plt
plt.plot([1,2,3,4])
plt.show()

import matplotlib.pyplot as plt
plt.plot([2,4,1,3])
plt.show()

#範例練習
import matplotlib.pyplot as plt
plt.plot([9,4,5,3])
plt.show()

#新增標題名稱
import matplotlib.pyplot as plt
plt.plot([2,4,1,3])
plt.title("figure 1")
plt.xlabel('x')#X軸標籤
plt.ylabel('number')#Y軸標籤
#不管有多少資料都要放在show前
plt.show()

import matplotlib.pyplot as plt
plt.plot([2,4,1,3],'g')#可以更改顏色，沒有寫的畫預設是藍色
plt.title("figure 1")
plt.xlabel('x')#X軸標籤
plt.ylabel('number')#Y軸標籤
#不管有多少資料都要放在show前
plt.show()

#可以更改樣式，沒有的畫預設就是直線
import matplotlib.pyplot as plt
plt.plot([1,2,5,4],'-.')
plt.title("figure 1")
plt.xlabel('x')#X軸標籤
plt.ylabel('number')#Y軸標籤
#不管有多少資料都要放在show前
plt.show()

#可以更改記號樣式，沒有寫預設就是直線
import matplotlib.pyplot as plt
plt.plot([1,2,5,4],'P')#跟更改線條型式相同的方法
plt.title("figure 1")
plt.xlabel('x')#X軸標籤
plt.ylabel('number')#Y軸標籤
#不管有多少資料都要放在show前
plt.show()

#同時調整顏色記號樣式
import matplotlib.pyplot as plt
plt.plot([1,2,5,4],'ro:')#顏色記號樣式
plt.title("figure 1")
plt.xlabel('x')#X軸標籤
plt.ylabel('number')#Y軸標籤
#不管有多少資料都要放在show前
plt.show()

#範例練習2
import matplotlib.pyplot as plt
plt.plot([0,7,3,0],'rs-.')#顏色記號樣式
plt.title("fig 2")
plt.xlabel('x axis')#X軸標籤
plt.ylabel('num.')#Y軸標籤
#不管有多少資料都要放在show前
plt.show()

"""2D繪圖"""

import matplotlib.pyplot as plt

plt.plot([1,2,3,4],[1,4,9,16],'ro--')
plt.axis([0,6,0,20])
plt.xlabel('x')#X軸標籤
plt.ylabel('number')#Y軸標籤
#不管有多少資料都要放在show前
plt.show()

#同時放在同一張圖上
import matplotlib.pyplot as plt
import numpy as np

x = np.arange(0,5,0.2)
plt.plot(x,x,'ro',x,x**2,'bs',x,x**3,'g^')
plt.show()

import matplotlib.pyplot as plt
import numpy as np

x = np.arange(0,5,0.2)

plt.plot(x,x,'ro',label='f(x)=x')
plt.plot(x,x**2,'bs',label='f(x)=x**2')
plt.plot(x,x**3,'g^',label='f(x)=x**3')

plt.title('fig 3')
plt.xlabel('x')
plt.ylabel('f(x)')
plt.legend() #顯示每一條線的LABEL
plt.show()

"""#**柱狀圖**"""

import matplotlib.pyplot as plt
import numpy as np

students = ['Jack','Tom','Mary','Andy']
math_scores = [82,65,90,75]
x = np.arange(len(students))

plt.bar(x,math_scores,color=['red','green','blue','yellow'])
plt.xticks(x,students)

plt.title('Final Term')
plt.xlabel('Students')
plt.ylabel('Math')

plt.show()

import matplotlib.pyplot as plt
import numpy as np

students = ['Jack','Tom','Mary','Andy']
math_scores = [82,65,90,75]
English_scores = [94,73,62,88]
x = np.arange(len(students))

width = 0.3 #寬度
plt.bar(x,math_scores,width,color='green',label='math')
plt.bar(x+width,English_scores,width,color='blue',label='English')#x+width把位置錯開(X軸上的位置)
plt.xticks(x+width/2,students)#x+width/2 X的標籤置中

plt.title('Final Term')
plt.xlabel('Students')
plt.ylabel('scores')
plt.legend(bbox_to_anchor = (1,1),loc = 'upper left')#bbox_to_anchor = (1,1) 在圖外，並且可以調位置


plt.show()

#疊在一起的柱狀圖
import matplotlib.pyplot as plt
import numpy as np

students = ['Jack','Tom','Mary','Andy']
math_scores = [82,65,90,75]
English_scores = [94,73,62,88]
x = np.arange(len(students))

width = 0.3 #寬度
plt.bar(x,math_scores,width,color='green',label='math')
plt.bar(x,English_scores,width,color='blue',label='English',bottom=math_scores)#x+width把位置錯開(X軸上的位置)
plt.xticks(x,students)#x+width/2 X的標籤置中

plt.title('Final Term')
plt.xlabel('Students')
plt.ylabel('scores')
plt.legend(bbox_to_anchor = (1,1),loc = 'upper left')#bbox_to_anchor = (1,1) 在圖外，並且可以調位置


plt.show()

#橫向柱狀圖
import matplotlib.pyplot as plt
import numpy as np

students = ['Jack','Tom','Mary','Andy']
math_scores = [82,65,90,75]
y = np.arange(len(students))

plt.barh(y,math_scores,color=['red','green','blue','yellow'])
plt.yticks(y,students)

plt.title('Final Term')
plt.xlabel('Students')
plt.ylabel('Math')

plt.show()

#直方圖

import matplotlib.pyplot as plt

scores = [82,65,90,75,98,100,25,45,74,15,46,47,48,87,85,86,94]

plt.hist(scores,bins=[0,20,40,60,80,100],edgecolor='k')#edgecolor 邊框顏色


plt.title('Score Hist')
plt.xlabel('scores')
plt.ylabel('number of people')

plt.show()

"""#**圓餅圖**




"""

#圓餅圖
import matplotlib.pyplot as plt
products = ['A','B','C','D']
revenue = [15,30,50,20]
plt.pie(revenue)
plt.show()

#圓餅圖
import matplotlib.pyplot as plt
products = ['A','B','C','D']
revenue = [15,30,50,20]
colors = ['red','green','yellow','pink']#圓餅圖的顏色初始是隨機的，可以指定
plt.pie(revenue, labels  =products , autopct = '%.2f%%',radius=2, colors=colors)
#autopct百分比，'%.2f%%'，用%表示，取到小數後兩位 
plt.show()

#圓餅圖
import matplotlib.pyplot as plt
explode = [0,0,0,0.1]
products = ['A','B','C','D']
revenue = [15,30,50,20]
colors = ['red','green','yellow','pink']#圓餅圖的顏色初始是隨機的，可以指定
plt.pie(revenue, labels  =products , autopct = '%.2f%%',radius=1, colors=colors,explode=explode)
#explode 凸顯效果，數字代表間隙大小
plt.show()

#範例練習 6
import matplotlib.pyplot as plt
explode = [0.1,0,0,0,0]
products = ['apple','samsung','oppo','mi','huawei']
revenue = [12,5,2,7,4]
colors = ['green','red','grey','pink','yellow']#圓餅圖的顏色初始是隨機的，可以指定
plt.pie(revenue, labels  =products , autopct = '%.2f%%',radius=1, colors=colors,explode=explode)
#explode 凸顯效果，數字代表間隙大小
plt.show()

#上傳檔案
import pandas as pd
from google.colab import files
uploaded = files.upload()

#讀取上傳的檔案

import pandas as pd
import io
df = pd.read_excel(io.BytesIO(uploaded['phone.xlsx']))
df

#讀取上傳的檔案
import pandas as pd
import io
df = pd.read_excel(io.BytesIO(uploaded['phone.xlsx']))
df.phone

#讀取上傳的檔案

import pandas as pd
import io
df = pd.read_excel(io.BytesIO(uploaded['phone.xlsx']))

df.amount

#用上傳檔案繪製圓餅圖
import matplotlib.pyplot as plt
plt.pie(df.amount,labels=df.phone,autopct='%.2f%%',radius=1)
plt.show()

#讀取拖曳上傳的檔案並繪製複數張圖
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

path = "/content/temp.xlsx"
df = pd.read_excel(path)

fig,(ax1 , ax2) = plt.subplots(2)

x = np.arange(len(df.temp))

ax1.plot(x,df.temp,'ro--',label='temp.')
ax1.set_ylabel('C')
ax1.legend(bbox_to_anchor=(1.05,1),loc='upper left')
ax1.grid(True)

ax2.plot(x,df.humi,'bs--',label='humi.')
ax2.set_ylabel('%')
ax2.legend(bbox_to_anchor=(1.05,1),loc='upper left')
ax2.grid(True)

fig.subplots_adjust(hspace=0.4,wspace=1)#格線
fig.suptitle('temp. & humi.')

plt.xlabel('time')

plt.show()